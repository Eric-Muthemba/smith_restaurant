# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UpdateItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, quantity: int=None, price: int=None, eta: int=None):  # noqa: E501
        """UpdateItem - a model defined in Swagger

        :param quantity: The quantity of this UpdateItem.  # noqa: E501
        :type quantity: int
        :param price: The price of this UpdateItem.  # noqa: E501
        :type price: int
        :param eta: The eta of this UpdateItem.  # noqa: E501
        :type eta: int
        """
        self.swagger_types = {
            'quantity': int,
            'price': int,
            'eta': int
        }

        self.attribute_map = {
            'quantity': 'quantity',
            'price': 'price',
            'eta': 'ETA'
        }
        self._quantity = quantity
        self._price = price
        self._eta = eta

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The update_item of this UpdateItem.  # noqa: E501
        :rtype: UpdateItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quantity(self) -> int:
        """Gets the quantity of this UpdateItem.


        :return: The quantity of this UpdateItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this UpdateItem.


        :param quantity: The quantity of this UpdateItem.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def price(self) -> int:
        """Gets the price of this UpdateItem.


        :return: The price of this UpdateItem.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price: int):
        """Sets the price of this UpdateItem.


        :param price: The price of this UpdateItem.
        :type price: int
        """

        self._price = price

    @property
    def eta(self) -> int:
        """Gets the eta of this UpdateItem.


        :return: The eta of this UpdateItem.
        :rtype: int
        """
        return self._eta

    @eta.setter
    def eta(self, eta: int):
        """Sets the eta of this UpdateItem.


        :param eta: The eta of this UpdateItem.
        :type eta: int
        """

        self._eta = eta
