# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AddToBasket(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, quantity: str=None, table_number: str=None):  # noqa: E501
        """AddToBasket - a model defined in Swagger

        :param name: The name of this AddToBasket.  # noqa: E501
        :type name: str
        :param quantity: The quantity of this AddToBasket.  # noqa: E501
        :type quantity: str
        :param table_number: The table_number of this AddToBasket.  # noqa: E501
        :type table_number: str
        """
        self.swagger_types = {
            'name': str,
            'quantity': str,
            'table_number': str
        }

        self.attribute_map = {
            'name': 'name',
            'quantity': 'quantity',
            'table_number': 'table_number'
        }
        self._name = name
        self._quantity = quantity
        self._table_number = table_number

    @classmethod
    def from_dict(cls, dikt) -> 'AddToBasket':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The add_to_basket of this AddToBasket.  # noqa: E501
        :rtype: AddToBasket
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this AddToBasket.


        :return: The name of this AddToBasket.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AddToBasket.


        :param name: The name of this AddToBasket.
        :type name: str
        """

        self._name = name

    @property
    def quantity(self) -> str:
        """Gets the quantity of this AddToBasket.


        :return: The quantity of this AddToBasket.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: str):
        """Sets the quantity of this AddToBasket.


        :param quantity: The quantity of this AddToBasket.
        :type quantity: str
        """

        self._quantity = quantity

    @property
    def table_number(self) -> str:
        """Gets the table_number of this AddToBasket.


        :return: The table_number of this AddToBasket.
        :rtype: str
        """
        return self._table_number

    @table_number.setter
    def table_number(self, table_number: str):
        """Sets the table_number of this AddToBasket.


        :param table_number: The table_number of this AddToBasket.
        :type table_number: str
        """

        self._table_number = table_number
