# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NewCustomer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_name: str=None, table_number: str=None, email: str=None):  # noqa: E501
        """NewCustomer - a model defined in Swagger

        :param customer_name: The customer_name of this NewCustomer.  # noqa: E501
        :type customer_name: str
        :param table_number: The table_number of this NewCustomer.  # noqa: E501
        :type table_number: str
        :param email: The email of this NewCustomer.  # noqa: E501
        :type email: str
        """
        self.swagger_types = {
            'customer_name': str,
            'table_number': str,
            'email': str
        }

        self.attribute_map = {
            'customer_name': 'customer_name',
            'table_number': 'table_number',
            'email': 'email'
        }
        self._customer_name = customer_name
        self._table_number = table_number
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'NewCustomer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The new_customer of this NewCustomer.  # noqa: E501
        :rtype: NewCustomer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_name(self) -> str:
        """Gets the customer_name of this NewCustomer.


        :return: The customer_name of this NewCustomer.
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name: str):
        """Sets the customer_name of this NewCustomer.


        :param customer_name: The customer_name of this NewCustomer.
        :type customer_name: str
        """

        self._customer_name = customer_name

    @property
    def table_number(self) -> str:
        """Gets the table_number of this NewCustomer.


        :return: The table_number of this NewCustomer.
        :rtype: str
        """
        return self._table_number

    @table_number.setter
    def table_number(self, table_number: str):
        """Sets the table_number of this NewCustomer.


        :param table_number: The table_number of this NewCustomer.
        :type table_number: str
        """

        self._table_number = table_number

    @property
    def email(self) -> str:
        """Gets the email of this NewCustomer.


        :return: The email of this NewCustomer.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this NewCustomer.


        :param email: The email of this NewCustomer.
        :type email: str
        """

        self._email = email
