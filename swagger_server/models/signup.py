# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Signup(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_name: str=None, email: str=None, password: str=None, confirmed_password: str=None):  # noqa: E501
        """Signup - a model defined in Swagger

        :param user_name: The user_name of this Signup.  # noqa: E501
        :type user_name: str
        :param email: The email of this Signup.  # noqa: E501
        :type email: str
        :param password: The password of this Signup.  # noqa: E501
        :type password: str
        :param confirmed_password: The confirmed_password of this Signup.  # noqa: E501
        :type confirmed_password: str
        """
        self.swagger_types = {
            'user_name': str,
            'email': str,
            'password': str,
            'confirmed_password': str
        }

        self.attribute_map = {
            'user_name': 'UserName',
            'email': 'Email',
            'password': 'Password',
            'confirmed_password': 'Confirmed_Password'
        }
        self._user_name = user_name
        self._email = email
        self._password = password
        self._confirmed_password = confirmed_password

    @classmethod
    def from_dict(cls, dikt) -> 'Signup':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The signup of this Signup.  # noqa: E501
        :rtype: Signup
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_name(self) -> str:
        """Gets the user_name of this Signup.


        :return: The user_name of this Signup.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name: str):
        """Sets the user_name of this Signup.


        :param user_name: The user_name of this Signup.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def email(self) -> str:
        """Gets the email of this Signup.


        :return: The email of this Signup.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Signup.


        :param email: The email of this Signup.
        :type email: str
        """

        self._email = email

    @property
    def password(self) -> str:
        """Gets the password of this Signup.


        :return: The password of this Signup.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Signup.


        :param password: The password of this Signup.
        :type password: str
        """

        self._password = password

    @property
    def confirmed_password(self) -> str:
        """Gets the confirmed_password of this Signup.


        :return: The confirmed_password of this Signup.
        :rtype: str
        """
        return self._confirmed_password

    @confirmed_password.setter
    def confirmed_password(self, confirmed_password: str):
        """Sets the confirmed_password of this Signup.


        :param confirmed_password: The confirmed_password of this Signup.
        :type confirmed_password: str
        """

        self._confirmed_password = confirmed_password
