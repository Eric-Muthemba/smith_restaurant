# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AssignTask(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, server_name: str=None, chef_name: str=None, order_number: int=None):  # noqa: E501
        """AssignTask - a model defined in Swagger

        :param server_name: The server_name of this AssignTask.  # noqa: E501
        :type server_name: str
        :param chef_name: The chef_name of this AssignTask.  # noqa: E501
        :type chef_name: str
        :param order_number: The order_number of this AssignTask.  # noqa: E501
        :type order_number: int
        """
        self.swagger_types = {
            'server_name': str,
            'chef_name': str,
            'order_number': int
        }

        self.attribute_map = {
            'server_name': 'server_name',
            'chef_name': 'chef_name',
            'order_number': 'order_number'
        }
        self._server_name = server_name
        self._chef_name = chef_name
        self._order_number = order_number

    @classmethod
    def from_dict(cls, dikt) -> 'AssignTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The assign_task of this AssignTask.  # noqa: E501
        :rtype: AssignTask
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_name(self) -> str:
        """Gets the server_name of this AssignTask.


        :return: The server_name of this AssignTask.
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name: str):
        """Sets the server_name of this AssignTask.


        :param server_name: The server_name of this AssignTask.
        :type server_name: str
        """

        self._server_name = server_name

    @property
    def chef_name(self) -> str:
        """Gets the chef_name of this AssignTask.


        :return: The chef_name of this AssignTask.
        :rtype: str
        """
        return self._chef_name

    @chef_name.setter
    def chef_name(self, chef_name: str):
        """Sets the chef_name of this AssignTask.


        :param chef_name: The chef_name of this AssignTask.
        :type chef_name: str
        """

        self._chef_name = chef_name

    @property
    def order_number(self) -> int:
        """Gets the order_number of this AssignTask.


        :return: The order_number of this AssignTask.
        :rtype: int
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number: int):
        """Sets the order_number of this AssignTask.


        :param order_number: The order_number of this AssignTask.
        :type order_number: int
        """

        self._order_number = order_number
